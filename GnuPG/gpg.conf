# HKEY_CURRENT_USER\Software\GNU\GnuPG\HomeDir=""
#home-dir <path to GnuPG user storage>

verbose
enable-progress-filter

# none | < 1, basic | 1 | 2, advanced | [3..5], expert | [6..8], guru | > 8
#debug-level guru
#debug-all

#default-key <id>
default-recipient-self

#
# For a best practice, see:
# https://wiki.debian.org/Subkeys
#
# Master: certify
# Sub 1: sign
# Sub 2: encrypt
# Sub 3: authenticate
#
#	gpg --expert --full-gen-key
#	gpg --list-secret-keys --keyid-format long --with-keygrip --with-fingerprint
#
# Sign (public when uploaded) and trust the key (local only):
#
# 	gpg --sign-with <id> --sign-key <id>
# 	gpg --expert --edit-key <id>
# 	> change-usage
# 	> key 1
# 	> key 2
#	> key 3
# 	> expire 2y
# 	> save
#
# OR: sign the key with a trust signature (public when uploaded):
#
# 	gpg --local-user <signing-key-id> --edit-key <signed-key-id>
#	> tsign
# 	> [1|2]
# 	> [depth]
# 	> [domain]
# 	> y
# 	> save
#
# Export a public key to a text file. Leave the id out to export all public keys ('certificates').
# 	gpg --armor --export <id> > ....asc
# Export a main private key to a text file. Leave the id out to export all main private keys.
# 	gpg --armor --export-secret-keys <id> --output <file>
# Export only the subkeys of a main key to a text file. Leave the id out to export all private subkeys.
# 	gpg --armor --export-secret-subkeys <id> > ....gpg
# 	gpg --import <..>
# 	gpg --edit-key <id>
# 	> trust
#	[trust level]
# 	> quit
#

default-keyserver-url hkps://keyserver.ubuntu.com
no-auto-key-retrieve
disable-dirmngr

default-new-key-algo "ed25519/cert,sign+cv25519/encr"
cipher-algo aes256
digest-algo sha512

require-secmem
require-cross-certification

# https://github.com/drduh/config/blob/master/gpg.conf
# https://www.gnupg.org/documentation/manuals/gnupg/GPG-Configuration-Options.html
# https://www.gnupg.org/documentation/manuals/gnupg/GPG-Esoteric-Options.html

# Use AES256, 192, or 128 as cipher
personal-cipher-preferences AES256 AES192 AES

# Use SHA512, 384, or 256 as digest
personal-digest-preferences SHA512 SHA384 SHA256

# Use ZLIB, BZIP2, ZIP, or no compression
personal-compress-preferences ZLIB BZIP2 ZIP Uncompressed

# Default preferences for new keys
default-preference-list SHA512 SHA384 SHA256 AES256 AES192 AES ZLIB BZIP2 ZIP Uncompressed

# SHA512 as digest to sign keys
cert-digest-algo SHA512

# SHA512 as digest for symmetric ops
s2k-digest-algo SHA512

# AES256 as cipher for symmetric ops
s2k-cipher-algo AES256

# UTF-8 support for compatibility
charset utf-8
utf8-strings

# Show Unix timestamps
#fixed-list-mode

# No comments in signature
no-comments

# No version in output
no-emit-version

# Disable banner
no-greeting

# Long hexidecimal key format
#keyid-format 0xlong
keyid-format long

# Display UID validity
list-options show-uid-validity
verify-options show-uid-validity

# Display all keys and their fingerprints
#with-fingerprint

#
#with-keygrip

# Display key origins and updates
#with-key-origin

# Cross-certify subkeys are present and valid
#require-cross-certification

# Disable caching of passphrase for symmetrical ops
#no-symkey-cache

# Enable smartcard
use-agent

# Disable recipient key ID in messages
throw-keyids

# Default/trusted key ID to use (helpful with throw-keyids)
#default-key <id>
#trusted-key <id>

# Group recipient keys (preferred ID last)
#group keygroup = <id> <id> <id>

# Keyserver URL
#keyserver hkps://keys.openpgp.org
#keyserver hkps://keyserver.ubuntu.com:443
#keyserver hkps://hkps.pool.sks-keyservers.net
#keyserver hkps://pgp.ocf.berkeley.edu

# Proxy to use for keyservers
#keyserver-options http-proxy=http://127.0.0.1:8118
#keyserver-options http-proxy=socks5-hostname://127.0.0.1:9050

# Verbose output
#verbose

# Show expired subkeys
#list-options show-unusable-subkeys
